{"version":3,"sources":["scale.js","app.js"],"names":["scale","c4","d4","e4","f4","g4","a4","b4","c5","d5","e5","f5","g5","a5","b5","c6","isMute","topPositionHz","AudioContext","window","webkitAudioContext","ctx","gainNode","createGain","oscillator","createOscillator","startButton","document","getElementById","stopButton","addEventListener","connect","destination","start","stop","betaHelz","e","adjustedBeta","Math","round","beta","hz","innerHTML","frequency","value","note","muteButton","gain"],"mappings":";AAkBeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlBf,IAAMA,EAAQ,CACZC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,IACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,IACJC,GAAI,QACJC,GAAI,UAGSf,EAAAA,EAAAA,QAAAA,QAAAA;;ACgDf,aAlEA,IAAA,EAAA,EAAA,QAAA,eAkEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhEA,IAAIgB,GAAS,EACPC,EAAgBjB,EAAMC,QAAAA,GAEtBiB,EAAeC,OAAOD,cAAgBC,OAAOC,mBAEnDC,EAAM,IAAIH,EACJI,EAAWD,EAAIE,aACfC,EAAaH,EAAII,mBAGjBC,EAAcC,SAASC,eAAe,SACtCC,EAAaF,SAASC,eAAe,QAC3CF,EAAYI,iBAAiB,QAAS,WACpCN,EAAWO,QAAQT,GACnBA,EAASS,QAAQV,EAAIW,aACrBR,EAAWO,QAAQV,EAAIW,aACvBR,EAAWS,UAGbJ,EAAWC,iBAAiB,QAAS,WACnCN,EAAWU,SAIb,IAAMC,EAAWR,SAASC,eAAe,QACzCT,OAAOW,iBAAiB,oBAAqB,SAACM,GAEtCC,IAAAA,EAAeC,KAAKC,MAAOH,EAAEI,KAAO,KAEpCC,EAAKxB,EAAiBA,GADZoB,EAAe,IAE/BF,EAASO,UAAYJ,KAAKC,MAAME,GAChCjB,EAAWmB,UAAUC,MAAQH,EAIzBI,IAAAA,EAAOlB,SAASC,eAAe,QAE/BiB,EAAKH,UADH,KAAOD,GAAMA,GAAM,IACJ,IACR,KAAOA,GAAMA,GAAM,IACX,IACR,KAAOA,GAAMA,GAAM,IACX,IACR,KAAOA,GAAMA,GAAM,IACX,KACR,KAAOA,GAAMA,GAAM,IACX,IACR,KAAOA,GAAMA,GAAM,IACX,IACR,KAAOA,GAAMA,GAAM,IACX,IACR,KAAOA,GAAMA,GAAM,IACX,IAEA,MAEpB,GAIH,IAAMK,EAAanB,SAASC,eAAe,QAC3CkB,EAAWhB,iBAAiB,aAAc,WACxCd,GAAS,EACTM,EAASyB,KAAKH,OAAS,IAEzBE,EAAWhB,iBAAiB,WAAY,WACtCd,GAAS,EACTM,EAASyB,KAAKH,MAAQ","file":"app.70ac0271.js","sourceRoot":"..","sourcesContent":["const scale = {\n  c4: 261.626,\n  d4: 293.665,\n  e4: 329.628,\n  f4: 349.228,\n  g4: 391.995,\n  a4: 440.000,\n  b4: 493.883,\n  c5: 523.251,\n  d5: 587.330,\n  e5: 659.255,\n  f5: 698.456,\n  g5: 783.991,\n  a5: 880.000,\n  b5: 987.767,\n  c6: 1046.502,\n}\n\nexport default scale;\n","import scale from './scale.js';\n\nlet isMute = false;\nconst topPositionHz = scale.c4;\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext,\n\nctx = new AudioContext();\nconst gainNode = ctx.createGain(); \nconst oscillator = ctx.createOscillator();\n\n\nconst startButton = document.getElementById('start');\nconst stopButton = document.getElementById('stop');\nstartButton.addEventListener('click', () => {\n  oscillator.connect(gainNode);\n  gainNode.connect(ctx.destination);\n  oscillator.connect(ctx.destination);\n  oscillator.start();\n});\n\nstopButton.addEventListener('click', () => {\n  oscillator.stop();\n})\n\n\nconst betaHelz = document.getElementById('helz'); \nwindow.addEventListener(\"deviceorientation\", (e) => {\n  // change start point function\n  const adjustedBeta = Math.round((e.beta + 180))\n  const percent = adjustedBeta / 90\n  const hz = topPositionHz + (topPositionHz * percent);\n  betaHelz.innerHTML = Math.round(hz)\n  oscillator.frequency.value = hz;\n\n\n// note\nconst note = document.getElementById('note');\n    if (258 <= hz && hz <= 264 ) {\n      note.innerHTML = \"ド\"\n    } else if (290 <= hz && hz <= 296 ) {\n      note.innerHTML = \"レ\"\n    } else if (326 <= hz && hz <= 332 ) {\n      note.innerHTML = \"ミ\"\n    } else if (346 <= hz && hz <= 352 ) {\n      note.innerHTML = \"ファ\"\n    } else if (328 <= hz && hz <= 394 ) {\n      note.innerHTML = \"ソ\"\n    } else if (437 <= hz && hz <= 443 ) {\n      note.innerHTML = \"ラ\"\n    } else if (490 <= hz && hz <= 496 ) {\n      note.innerHTML = \"シ\"\n    } else if (520 <= hz && hz <= 526 ) {\n      note.innerHTML = \"ド\"\n    } else {\n      note.innerHTML = \"-\"\n    }\n}, true);\n\n\n// mute\nconst muteButton = document.getElementById('mute'); \nmuteButton.addEventListener('touchstart', () => {\n  isMute = true\n  gainNode.gain.value = -1;\n})\nmuteButton.addEventListener('touchend', () => {\n  isMute = false\n  gainNode.gain.value = 1;\n})\n"]}